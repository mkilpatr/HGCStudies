import os
import json

# json file witll_BkgPred_v2e bkg predictions and signal yields
def write_json(data, filename='ModuleTolerances_complete_100K_021821/TestFull/Full_BadmoduleTolerances.json'):
    with open(filename,'w') as f:
    	json.dump(data, f, indent=2, ensure_ascii=False)

eosDir = "/eos/uscms/store/user/mkilpatr/13TeV/ModuleTolerances_complete_100K_021821/"
Dist = ["Gaussian_Kaptonminus0_oldSensor", "Flat_Kaptonminus0_oldSensor", "Gaussian_Kaptonminus0_newSensor", "Gaussian_Kaptonminus0_midSensor", "CustomGaus_Kaptonminus0_oldSensor", "CustomFlat_Kaptonminus0_oldSensor", "Gaussian_Kaptonplus175_oldSensor", "Gaussian_Kaptonplus200_oldSensor", "Gaussian_Kaptonplus225_oldSensor", "Gaussian_Kaptonplus100_oldSensor", "Gaussian_Kaptonplus125_oldSensor", "Gaussian_Kaptonplus150_oldSensor", "Gaussian_Kaptonplus25_oldSensor", "Gaussian_Kaptonplus50_oldSensor", "Gaussian_Kaptonplus75_oldSensor", "Gaussian_Kaptonminus25_oldSensor", "Gaussian_Kaptonminus50_oldSensor", "Gaussian_Kaptonminus75_oldSensor", "Gaussian_Kaptonminus150_oldSensor", "Gaussian_Kaptonminus170_oldSensor", "Gaussian_Kaptonplus175_newSensor", "Gaussian_Kaptonplus200_newSensor", "Gaussian_Kaptonplus225_newSensor", "Gaussian_Kaptonplus100_newSensor", "Gaussian_Kaptonplus125_newSensor", "Gaussian_Kaptonplus150_newSensor", "Gaussian_Kaptonplus25_newSensor", "Gaussian_Kaptonplus50_newSensor", "Gaussian_Kaptonplus75_newSensor", "Gaussian_Kaptonminus25_newSensor", "Gaussian_Kaptonminus50_newSensor", "Gaussian_Kaptonminus75_newSensor", "Gaussian_Kaptonminus150_newSensor", "Gaussian_Kaptonminus170_newSensor", "Gaussian_Kaptonplus175_midSensor", "Gaussian_Kaptonplus200_midSensor", "Gaussian_Kaptonplus225_midSensor", "Gaussian_Kaptonplus100_midSensor", "Gaussian_Kaptonplus125_midSensor", "Gaussian_Kaptonplus150_midSensor", "Gaussian_Kaptonplus25_midSensor", "Gaussian_Kaptonplus50_midSensor", "Gaussian_Kaptonplus75_midSensor", "Gaussian_Kaptonminus25_midSensor", "Gaussian_Kaptonminus50_midSensor", "Gaussian_Kaptonminus75_midSensor", "Gaussian_Kaptonminus150_midSensor", "Gaussian_Kaptonminus170_midSensor", "Gaussian_PCBplus25_oldSensor", "Gaussian_PCBplus50_oldSensor", "Gaussian_PCBplus75_oldSensor", "Gaussian_PCBplus25_newSensor", "Gaussian_PCBplus50_newSensor", "Gaussian_PCBplus75_newSensor", "Gaussian_PCBplus25_midSensor", "Gaussian_PCBplus50_midSensor", "Gaussian_PCBplus75_midSensor", "Gaussian_PCBminus0_oldSensor", "Gaussian_PCBminus0_newSensor", "Gaussian_PCBminus0_midSensor", "Gaussian_PCBminus25_oldSensor", "Gaussian_PCBminus50_oldSensor", "Gaussian_PCBminus75_oldSensor", "Gaussian_PCBminus25_newSensor", "Gaussian_PCBminus50_newSensor", "Gaussian_PCBminus75_newSensor", "Gaussian_PCBminus25_midSensor", "Gaussian_PCBminus50_midSensor", "Gaussian_PCBminus75_midSensor", "Gaussian_PCBplus125_Kaptonplus175_oldSensor", "Gaussian_PCBplus125_Kaptonplus200_oldSensor", "Gaussian_PCBplus125_Kaptonplus225_oldSensor", "Gaussian_PCBplus100_Kaptonplus175_oldSensor", "Gaussian_PCBplus100_Kaptonplus200_oldSensor", "Gaussian_PCBplus100_Kaptonplus225_oldSensor", "Gaussian_PCBplus75_Kaptonplus175_oldSensor", "Gaussian_PCBplus75_Kaptonplus200_oldSensor", "Gaussian_PCBplus75_Kaptonplus225_oldSensor", "Gaussian_PCBplus50_Kaptonplus175_oldSensor", "Gaussian_PCBplus50_Kaptonplus200_oldSensor", "Gaussian_PCBplus50_Kaptonplus225_oldSensor", "Gaussian_PCBplus25_Kaptonplus175_oldSensor", "Gaussian_PCBplus25_Kaptonplus200_oldSensor", "Gaussian_PCBplus25_Kaptonplus225_oldSensor", "Gaussian_PCBplus125_Kaptonplus175_midSensor", "Gaussian_PCBplus125_Kaptonplus200_midSensor", "Gaussian_PCBplus125_Kaptonplus225_midSensor", "Gaussian_PCBplus100_Kaptonplus175_midSensor", "Gaussian_PCBplus100_Kaptonplus200_midSensor", "Gaussian_PCBplus100_Kaptonplus225_midSensor", "Gaussian_PCBplus75_Kaptonplus175_midSensor", "Gaussian_PCBplus75_Kaptonplus200_midSensor", "Gaussian_PCBplus75_Kaptonplus225_midSensor", "Gaussian_PCBplus50_Kaptonplus175_midSensor", "Gaussian_PCBplus50_Kaptonplus200_midSensor", "Gaussian_PCBplus50_Kaptonplus225_midSensor", "Gaussian_PCBplus25_Kaptonplus175_midSensor", "Gaussian_PCBplus25_Kaptonplus200_midSensor", "Gaussian_PCBplus25_Kaptonplus225_midSensor", "Gaussian_PCBplus125_Kaptonplus175_newSensor", "Gaussian_PCBplus125_Kaptonplus200_newSensor", "Gaussian_PCBplus125_Kaptonplus225_newSensor", "Gaussian_PCBplus100_Kaptonplus175_newSensor", "Gaussian_PCBplus100_Kaptonplus200_newSensor", "Gaussian_PCBplus100_Kaptonplus225_newSensor", "Gaussian_PCBplus75_Kaptonplus175_newSensor", "Gaussian_PCBplus75_Kaptonplus200_newSensor", "Gaussian_PCBplus75_Kaptonplus225_newSensor", "Gaussian_PCBplus50_Kaptonplus175_newSensor", "Gaussian_PCBplus50_Kaptonplus200_newSensor", "Gaussian_PCBplus50_Kaptonplus225_newSensor", "Gaussian_PCBplus25_Kaptonplus175_newSensor", "Gaussian_PCBplus25_Kaptonplus200_newSensor", "Gaussian_PCBplus25_Kaptonplus225_newSensor"]

with open("/eos/uscms/store/user/mkilpatr/13TeV/ModuleTolerances_complete_100K_021821/Gaussian_Kaptonminus0_oldSensor_Full/Full_BadmoduleTolerances.json", "a+") as new:
    newData = json.load(new)
    newData['Worst']["Bad Components"] = {}
    newData['Worst']["Bad Overlaps"] = {}

for d in Dist:
    with open(eosDir+d+"_Full/Full_BadmoduleTolerances.json", "r") as lepcr:
        lep_insert = json.load(lepcr)
        newData['Worst']["Bad Overlaps"][d] = {}
        newData['Worst']["Bad Components"].update(lep_insert['Worst']["Bad Components"])
        newData['Worst']["Bad Overlaps"][d].update(lep_insert['Worst']["Bad Overlaps"][d])
write_json(newData)

